)
} else if (var == "NOX") {
# Create histogram for NOX value where range value around 0.1 - 1
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.01, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.5, fill = "orange", color = "white", alpha = 0.7) +
geom_text(stat = 'count', aes(label = ifelse(..count.. > 0, ..count.., ""), size = dynamic_font_size(..count..)), vjust = -0.5, color = "white", position = position_dodge(width = 0.5)) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
}
ggsave(paste0("histogram/", var, "_histogram.png"), p)
}
rlang::last_trace()
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.5, fill = "orange", color = "white", alpha = 0.7) +
geom_text(stat = 'bin', aes(label = ifelse(..count.. > 0, ..count.., ""), size = dynamic_font_size(..count..)), vjust = -0.5, color = "white", position = position_dodge(width = 0.5)) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
# Generate distribution for each variable
for (var in names(numeric_vars)) {
if (var == "CRIM") {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 20, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "CHAS") {
# Create a bar plot for the binary variable CHAS - nominal scale
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7, width = 0.5) +
geom_text(stat = 'count', aes(label = ifelse(..count.. > 0, ..count.., "")), vjust = -0.5, color = "white") +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "RAD") {
# Create a bar plot for the ordinal variable RAD (1-24)
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "NOX") {
# Create histogram for NOX value where range value around 0.1 - 1
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.01, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.5, fill = "orange", color = "white", alpha = 0.7) +
geom_text(stat = 'bin', aes(label = ifelse(..count.. > 0, ..count.., ""), size = dynamic_font_size(..count..)), vjust = -0.5, color = "white", position = position_dodge(width = 0.5)) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
}
ggsave(paste0("histogram/", var, "_histogram.png"), p)
}
# Generate distribution for each variable
for (var in names(numeric_vars)) {
if (var == "CRIM") {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 20, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "CHAS") {
# Create a bar plot for the binary variable CHAS - nominal scale
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7, width = 0.5) +
geom_text(stat = 'count', aes(label = ifelse(..count.. > 0, ..count.., "")), vjust = -0.5, color = "white") +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "RAD") {
# Create a bar plot for the ordinal variable RAD (1-24)
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "NOX") {
# Create histogram for NOX value where range value around 0.1 - 1
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.01, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.5, fill = "orange", color = "white", alpha = 0.7) +
geom_text(stat = 'binwidth', aes(label = ifelse(..count.. > 0, ..count.., ""), size = dynamic_font_size(..count..)), vjust = -0.5, color = "white", position = position_dodge(width = 0.5)) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
}
ggsave(paste0("histogram/", var, "_histogram.png"), p)
# Generate distribution for each variable
for (var in names(numeric_vars)) {
if (var == "CRIM") {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 20, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "CHAS") {
# Create a bar plot for the binary variable CHAS - nominal scale
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7, width = 0.5) +
geom_text(stat = 'count', aes(label = ifelse(..count.. > 0, ..count.., "")), vjust = -0.5, color = "white") +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "RAD") {
# Create a bar plot for the ordinal variable RAD (1-24)
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "NOX") {
# Create histogram for NOX value where range value around 0.1 - 1
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.01, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.5, fill = "orange", color = "white", alpha = 0.7) +
geom_text(stat = 'binwidth', aes(label = ifelse(..count.. > 0, ..count.., ""), size = dynamic_font_size(..count..)), vjust = -0.5, color = "white", position = position_dodge(width = 0.5)) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
}
ggsave(paste0("histogram/", var, "_histogram.png"), p)
for (var in names(numeric_vars)) {
if (var == "CRIM") {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 20, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "CHAS") {
# Create a bar plot for the binary variable CHAS - nominal scale
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7, width = 0.5) +
geom_text(stat = 'count', aes(label = ifelse(..count.. > 0, ..count.., "")), vjust = -0.5, color = "white") +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "RAD") {
# Create a bar plot for the ordinal variable RAD (1-24)
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "NOX") {
# Create histogram for NOX value where range value around 0.1 - 1
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.01, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.5, fill = "orange", color = "white", alpha = 0.7) +
geom_text(stat = 'binwidth', aes(label = ifelse(..count.. > 0, ..count.., ""), size = dynamic_font_size(..count..)), vjust = -0.5, color = "white", position = position_dodge(width = 0.5)) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
}
ggsave(paste0("histogram/", var, "_histogram.png"), p)
}
for (var in names(numeric_vars)) {
if (var == "CRIM") {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 20, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "CHAS") {
# Create a bar plot for the binary variable CHAS - nominal scale
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7, width = 0.5) +
geom_text(stat = 'count', aes(label = ifelse(..count.. > 0, ..count.., "")), vjust = -0.5, color = "white") +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "RAD") {
# Create a bar plot for the ordinal variable RAD (1-24)
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "NOX") {
# Create histogram for NOX value where range value around 0.1 - 1
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.01, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.5, fill = "orange", color = "white", alpha = 0.7) +
geom_text(stat = 'binwidth', aes(label = ifelse(..count.. > 0, ..count.., ""), size = dynamic_font_size(..count..)), vjust = -0.5, color = "white", position = position_dodge(width = 0.5)) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
}
ggsave(paste0("histogram/", var, "_histogram.png"), p)
}
for (var in names(numeric_vars)) {
if (var == "CRIM") {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 20, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "CHAS") {
# Create a bar plot for the binary variable CHAS - nominal scale
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7, width = 0.5) +
geom_text(stat = 'count', aes(label = ifelse(..count.. > 0, ..count.., "")), vjust = -0.5, color = "white") +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "RAD") {
# Create a bar plot for the ordinal variable RAD (1-24)
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "NOX") {
# Create histogram for NOX value where range value around 0.1 - 1
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.01, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.5, fill = "orange", color = "white", alpha = 0.7) +
geom_text(stat = 'binwidth', aes(label = ifelse(..count.. > 0, ..count.., ""), size = dynamic_font_size(..count..)), vjust = -0.5, color = "white", position = position_dodge(width = 0.5)) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
}
ggsave(paste0("histogram/", var, "_histogram.png"), p)
}
for (var in names(numeric_vars)) {
if (var == "CRIM") {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 20, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "CHAS") {
# Create a bar plot for the binary variable CHAS - nominal scale
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7, width = 0.5) +
geom_text(stat = 'count', aes(label = ifelse(..count.. > 0, ..count.., "")), vjust = -0.5, color = "white") +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "RAD") {
# Create a bar plot for the ordinal variable RAD (1-24)
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "NOX") {
# Create histogram for NOX value where range value around 0.1 - 1
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.01, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.5, fill = "orange", color = "white", alpha = 0.7) +
geom_text(stat = 'binwidth', aes(label = ifelse(..count.. > 0, ..count.., ""), size = dynamic_font_size(..count..)), vjust = -0.5, color = "white", position = position_dodge(width = 0.5)) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
}
ggsave(paste0("histogram/", var, "_histogram.png"), p)
}
for (var in names(numeric_vars)) {
if (var == "CRIM") {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 20, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "CHAS") {
# Create a bar plot for the binary variable CHAS - nominal scale
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7, width = 0.5) +
geom_text(stat = 'count', aes(label = ifelse(..count.. > 0, ..count.., "")), vjust = -0.5, color = "white") +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "RAD") {
# Create a bar plot for the ordinal variable RAD (1-24)
p <- ggplot(housing, aes_string(x = var)) +
geom_bar(fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else if (var == "NOX") {
# Create histogram for NOX value where range value around 0.1 - 1
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.01, fill = "orange", color = "white", alpha = 0.7) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
} else {
p <- ggplot(housing, aes_string(x = var)) +
geom_histogram(binwidth = 0.5, fill = "orange", color = "white", alpha = 0.7) +
# geom_text(stat = 'binwidth', aes(label = ifelse(..count.. > 0, ..count.., ""), size = dynamic_font_size(..count..)), vjust = -0.5, color = "white", position = position_dodge(width = 0.5)) +
labs(title = titles[var], x = var, y = "Frekuensi") +
theme_minimal() +
theme(
plot.title = element_text(color = "white"),
axis.title.x = element_text(color = "white"),
axis.title.y = element_text(color = "white")
)
}
ggsave(paste0("histogram/", var, "_histogram.png"), p)
}
housing<-read.csv("housing.csv")
housing<-read.csv("housing.csv")
